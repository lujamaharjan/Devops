version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: tododb
      POSTGRES_USER: todo_user
      POSTGRES_PASSWORD: todo_pass
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U todo_user -d tododb"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy 
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=db;Port=5432;Database=tododb;Username=todo_user;Password=todo_pass
    ports:
      - "5001:80"

  frontend:
    image: nginx:alpine
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    ports:
      - "8080:80"
    depends_on:
      - api

  node-exporter:
    image: prom/node-exporter:latest
    deploy:
      mode: global  
      restart_policy:
        condition: on-failure
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host'
    volumes:
      - /:/host:ro,rslave
    pid: host

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg:ro
    deploy:
      mode: global  
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    privileged: true
volumes:
  postgres-data: